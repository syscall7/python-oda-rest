from test.test_case import MkdirTestCase

class TestSections(MkdirTestCase):

    def test_sections(self):
        expected = (
            {'size': 28, 'vma': 4194872, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.interp'},
            {'size': 32, 'vma': 4194900, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.note.ABI-tag'},
            {'size': 36, 'vma': 4194932, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.note.gnu.build-id'},
            {'size': 68, 'vma': 4194968, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.gnu.hash'},
            {'size': 1848, 'vma': 4195040, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.dynsym'},
            {'size': 730, 'vma': 4196888, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.dynstr'},
            {'size': 154, 'vma': 4197618, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.gnu.version'},
            {'size': 80, 'vma': 4197776, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.gnu.version_r'},
            {'size': 168, 'vma': 4197856, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.rela.dyn'},
            {'size': 1608, 'vma': 4198024, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.rela.plt'},
            {'size': 24, 'vma': 4199632, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_CODE', 'val': 16, 'abbrev': 'CODE', 'desc': 'The section contains code only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.init'},
            {'size': 1088, 'vma': 4199664, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_CODE', 'val': 16, 'abbrev': 'CODE', 'desc': 'The section contains code only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.plt'},
            {'size': 44392, 'vma': 4200752, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_CODE', 'val': 16, 'abbrev': 'CODE', 'desc': 'The section contains code only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.text'},
            {'size': 14, 'vma': 4245144, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_CODE', 'val': 16, 'abbrev': 'CODE', 'desc': 'The section contains code only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.fini'},
            {'size': 5664, 'vma': 4245184, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.rodata'},
            {'size': 1156, 'vma': 4250848, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.eh_frame_hdr'},
            {'size': 4708, 'vma': 4252008, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_READONLY', 'val': 8, 'abbrev': 'READONLY', 'desc': 'A signal to the OS that the section contains read only data.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.eh_frame'},
            {'size': 16, 'vma': 6356512, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.ctors'},
            {'size': 16, 'vma': 6356528, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.dtors'},
            {'size': 8, 'vma': 6356544, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.jcr'},
            {'size': 400, 'vma': 6356552, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.dynamic'},
            {'size': 16, 'vma': 6356952, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.got'},
            {'size': 560, 'vma': 6356968, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.got.plt'},
            {'size': 152, 'vma': 6357536, 'flags': [{'name': 'SEC_ALLOC', 'val': 1, 'abbrev': 'ALLOC', 'desc': 'Tells the OS to allocate space for this section when loading. This is clear for a section containing debug information only.'}, {'name': 'SEC_LOAD', 'val': 2, 'abbrev': 'LOAD', 'desc': 'Tells the OS to load the section from the file when loading. This is clear for a .bss section.'}, {'name': 'SEC_DATA', 'val': 32, 'abbrev': 'DATA', 'desc': 'The section contains data only.'}, {'name': 'SEC_HAS_CONTENTS', 'val': 256, 'abbrev': 'CONTENTS', 'desc': 'The section has contents - a data section could be <<SEC_ALLOC>> | <<SEC_HAS_CONTENTS>>; a debug section could be <<SEC_HAS_CONTENTS>>.'}], 'name': '.data'},
        )

        actual = self.project.Sections()

        for e, a in zip(expected, actual):
            self.assertDictEqual(e, a)
